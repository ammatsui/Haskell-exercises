module Fixit where
import Prelude hiding (reverse, foldr)

reverse' :: ([a] -> [a]) -> [a] -> [a]
reverse' f []     = []
reverse' f (x:xs) = (f xs) ++ [x]

foldr' :: ((a ->b ->b) ->b ->[a] ->b) ->((a ->b ->b) ->b ->[a] ->b)
foldr' _    _ b []     = b
foldr' fold f b (x:xs) = f x (fold f b xs)

reverse = fix reverse'
foldr = fix foldr'
